int KMP(string pat, string s2){
        int n=s2.size(), m=pat.size();
        vector<int> lps(m);
        compute(pat,lps);
        int i=0,j=0;
        while(i<n){
            if(s2[i]==pat[j]){
                i++;j++; 
            }
           
            else {
                if(j==0)i+=1;
                else j = lps[j-1];
            }
             if(j==m)return (i-j);
        }
        return -1;
    }
    
    void compute(string pat, vector<int>&lps){
        int n=pat.size(),i=0,j=0;
        lps[0]=0;i++; cout<<pat<<endl;
        while(i<n){
            if(pat[i]==pat[j]){
                j++;
                lps[i] =j;
                i++;
            }
            else{
                if(j==0){lps[i]=0;i+=1;}
                else j = lps[j-1];
            }
        }
    }  